[package]
name = "torii"
version = "0.3.1"
description = "A modular authentication ecosystem for Rust applications"
edition.workspace = true
repository.workspace = true
license.workspace = true

[dependencies]
torii-core = { path = "../torii-core", version = "0.3.1" }
torii-storage-sqlite = { path = "../torii-storage-sqlite", version = "0.3.1", optional = true }
torii-storage-postgres = { path = "../torii-storage-postgres", version = "0.3.1", optional = true }
torii-storage-seaorm = { path = "../torii-storage-seaorm", version = "0.3.1", optional = true }

# dependencies
chrono.workspace = true # TODO: Make this optional and expose std::time::Duration in APIs
tracing.workspace = true
thiserror.workspace = true
serde_json.workspace = true
serde.workspace = true

[dev-dependencies]
tokio = { workspace = true, features = ["full"] }
testcontainers-modules = { version = "0.12.0", features = ["postgres", "mysql", "mariadb"] }
tracing-subscriber = { workspace = true }
sqlx = { workspace = true, features = ["sqlite", "runtime-tokio-rustls"] }

[features]
default = ["password", "sqlite"]

# storage backends
sqlite = ["dep:torii-storage-sqlite"]
postgres = ["dep:torii-storage-postgres"]

# seaorm storage backends
seaorm-sqlite = ["dep:torii-storage-seaorm", "torii-storage-seaorm/sqlite"]
seaorm-postgres = ["dep:torii-storage-seaorm", "torii-storage-seaorm/postgres"]
seaorm-mysql = ["dep:torii-storage-seaorm", "torii-storage-seaorm/mysql"]
seaorm = ["dep:torii-storage-seaorm", "torii-storage-seaorm/sqlite", "torii-storage-seaorm/postgres", "torii-storage-seaorm/mysql"]

# auth features (now implemented as services in torii-core)
password = []
oauth = []
passkey = []
magic-link = []
